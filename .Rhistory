md <- read.csv("C:/Users/Ablak/Downloads/OverpassAnalysis/muledeernewest.csv")
md <- read.xlsx("C:/Users/Ablak/Downloads/OverpassAnalysis/muledeernewest.csv")
library(readxl)
md <- read.xlsx("C:/Users/Ablak/Downloads/OverpassAnalysis/muledeernewest.csv")
?readxl
md <- read_xlsx("C:/Users/Ablak/Downloads/OverpassAnalysis/muledeernewest.csv")
md <- read_xlsx("C:/Users/Ablak/Downloads/OverpassAnalysis/muledeernewest.xlsx")
md$season<-NA
for( i in 1: nrow(md)){
if (md$Month[i] %in% c(2,12,1)){
md$season[i]<-"winter"
} else if (md$Month[i] %in% c(5,3,4)) {
md$season[i]<-"spring"
} else if (md$Month[i] %in% c(6,7,8)) {
md$season[i]<-"summer"
} else if (md$Month[i] %in% c(9,10,11)) {
md$season[i]<-"fall"
}
}
View(md)
View(md)
md <- read_xlsx("C:/Users/Ablak/Downloads/OverpassAnalysis/muledeernewest.xlsx")
md$season<-NA
for( i in 1: nrow(md)){
if (md$Month[i] %in% c(2,12,1)){
md$season[i]<-"winter"
} else if (md$Month[i] %in% c(5,3,4)) {
md$season[i]<-"spring"
} else if (md$Month[i] %in% c(6,7,8)) {
md$season[i]<-"summer"
} else if (md$Month[i] %in% c(9,10,11)) {
md$season[i]<-"fall"
}
}
View(md)
md$Time <- as.POSIXct(md$Time.of.Capture, tz = "UTC", format = "%H:%M")
for( i in 1: nrow(md)){
if (lubridate::hour(md$Time)[i] %in% c(5, 6, 7, 8, 18, 19, 20, 21)){
md$ToD[i]<-"Dawn/Dusk"
} else if (lubridate::hour(md$Time)[i] %in% c(9, 10, 11, 12, 13, 14, 15, 16, 17)){
md$ToD[i]<-"Daytime"
} else if (lubridate::hour(md$Time)[i] %in% c(22, 23, 0, 1, 2, 3, 4)){
md$ToD[i]<-"Nighttime"
}
}
md.season <- md$success ~ md$season
md.model <- glm(md.season, family = "binomial", data = md)
summary(md.model)
md.season <- md$success ~ md$season
md.model <- glm(md.season, family = "binomial", data = md)
md.season <- md$`Crossing Type` ~ md$season
md.model <- glm(md.season, family = "binomial", data = md)
summary(md.model)
md.model <- glm(md.season, family = "binomial", data = md)
md.season <- md$`Crossing Type` ~ md$season
md <- read_csv("C:/Users/Ablak/Downloads/OverpassAnalysis/MuleDeer_sld.csv")
my_db <- dbConnect(RSQLite::SQLite(), "muledeercrossingevents")
library(SQLite)
install.packages("SQLite")
library(SQLite)
install.packages("SQLite")
library(SQLite)
my_db <- dbConnect(RSQLite::SQLite(), "muledeercrossingevents")
?dbConnect
install.packages("DBI")
library(SQLite)
install.packages("DBI")
library(DBI)
my_db <- dbConnect(RSQLite::SQLite(), "muledeercrossingevents")
View(my_db)
summary(muledeercrossingevents)
summary(my_db)
